{"id":9529,"date":"2021-06-11T16:37:47","date_gmt":"2021-06-11T23:37:47","guid":{"rendered":"https:\/\/joinhandshake.com\/?post_type=our-team&#038;p=9529"},"modified":"2021-10-12T11:11:52","modified_gmt":"2021-10-12T18:11:52","slug":"improve-devx-with-graphql-apollo","status":"publish","type":"our-team","link":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/","title":{"rendered":"Upleveling Our Developer Experience with GraphQL and Apollo Client"},"content":{"rendered":"\n<p>Handshake is starting to roll out some features powered by a new GraphQL API. As a result, we\u2019re exploring new tooling, patterns, and best practices that we hope will provide a better Developer Experience (DX) going forward. We <a href=\"https:\/\/joinhandshake.com\/blog\/our-team\/graphql-on-ios\/\" target=\"_blank\" rel=\"noreferrer noopener\">decided not to use Apollo on iOS<\/a>, but have been going all in on leveraging <a href=\"https:\/\/joinhandshake.com\/blog\/our-team\/graphql-on-ios\/\" target=\"_blank\" rel=\"noreferrer noopener\">Apollo Client<\/a> and its ecosystem of tools in our web UI.<\/p>\n\n\n\n<p>As part of this transition we focused on improving the DX in 3 main areas:<\/p>\n\n\n\n<ol><li>A declarative API for accessing data at any level of the component hierarchy. This is critical since so many components need to interact with data from our APIs.<\/li><li>TypeScript interface generation which provides more accurate interfaces and eliminates the need to maintain them by hand. This gives developers a much faster feedback loop and more confidence in the code they are writing.<\/li><li>A mock API for testing to make our tests more reliable and easier to write and maintain.<\/li><\/ol>\n\n\n\n<h2>Missing Redux<\/h2>\n\n\n\n<p>We\u2019re coming from using<a href=\"https:\/\/github.com\/reduxjs\/redux\"> Redux<\/a> and<a href=\"https:\/\/github.com\/paularmstrong\/normalizr\"> Normalizr<\/a> for storing data from the server and<a href=\"https:\/\/github.com\/reduxjs\/reselect\"> Reselect<\/a> to pull data out of the store anywhere in our component hierarchy. The ability to query data from the store wherever it\u2019s needed is something we have enjoyed and wanted to preserve in our transition.<\/p>\n\n\n\n<p>When we started adopting Apollo Client, the only obvious way to expose data from our top-level components making calls to<a href=\"https:\/\/www.apollographql.com\/docs\/react\/api\/react\/hooks\/#usequery\"> useQuery<\/a> was to pass data down via props wherever we needed it. This approach resulted in <a href=\"https:\/\/kentcdodds.com\/blog\/prop-drilling\/\">prop drilling<\/a> that smelled bad to us, and we missed having the ability to reach into the Redux store and pull out data in deeper levels of the component tree. We quickly started looking for a way to provide a similar DX to what we had with Redux where each component could query the store to pull out the data it needed.<\/p>\n\n\n\n<h2>Fragment Composition<\/h2>\n\n\n\n<p>We wanted to allow each component to declare its own data needs, which helps developers get a better picture of a component\u2019s dependencies at a glance. We realized that<a href=\"https:\/\/relay.dev\/\"> Relay<\/a> provided the DX we were looking for with<a href=\"https:\/\/relay.dev\/docs\/guided-tour\/rendering\/fragments\/#composing-fragments\"> Fragment Composition<\/a>, however, we were already pretty sold on Apollo, their community, and ecosystem of supporting tools. There has been<a href=\"https:\/\/github.com\/apollographql\/react-apollo\/issues\/140\"> some discussion about supporting fragment composition in Apollo Client<\/a> and some<a href=\"https:\/\/github.com\/lucasconstantino\/react-apollo-fragments\"> promising projects by the community<\/a>, but we didn\u2019t see any attempts that appeared to be production-ready for an app like Handshake.<\/p>\n\n\n\n<p>With Apollo Client we are able to<a href=\"https:\/\/www.apollographql.com\/docs\/react\/data\/fragments\/#colocating-fragments\"> colocate fragments<\/a> with our components. This can be a good organizational pattern, but requires defining the fragment plus updating the main query to stitch things together. This pattern certainly has tradeoffs and we don\u2019t feel strongly that it\u2019s always the right fit, but is a nice organizational pattern to keep in mind.<\/p>\n\n\n\n<h2>Query Hooks and Caching<\/h2>\n\n\n\n<p>Colocating fragments allowed our components to declare their own data needs, but we still wanted to find a way to access data from the query without passing it down via props. After some experimentation, we realized that we could make calls for the same query multiple times in different components and rely on Apollo Client\u2019s caching logic to avoid making duplicate requests. We ended up wrapping our calls to useQuery so we can minimize the amount of code required to reuse a query in each component. This gives us a logical place to put our gql queries and supporting TypeScript interfaces.<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler\"><div class=\"wp-block-embed__wrapper\">\n<style>.gist table { margin-bottom: 0; }<\/style><div style=\"tab-size: 8\" id=\"gist109922254\" class=\"gist\">\n    <div class=\"gist-file\" translate=\"no\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-1801126254_1-js\" class=\"file my-2\">\n    \n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-javascript  \">\n\n      \n<div >\n  \n  <table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n        <tr>\n          <td id=\"file-1801126254_1-js-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"><\/td>\n          <td id=\"file-1801126254_1-js-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>import<\/span> <span class=pl-kos>{<\/span> <span class=pl-s1>gql<\/span><span class=pl-kos>,<\/span> <span class=pl-s1>useQuery<\/span> <span class=pl-kos>}<\/span> <span class=pl-k>from<\/span> <span class=pl-s>&quot;@apollo\/client&quot;<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"><\/td>\n          <td id=\"file-1801126254_1-js-LC2\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"><\/td>\n          <td id=\"file-1801126254_1-js-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>import<\/span> <span class=pl-kos>{<\/span> <span class=pl-v>GetUser<\/span><span class=pl-kos>,<\/span> <span class=pl-v>GetUserVariables<\/span><span class=pl-kos>,<\/span> <span class=pl-kos>}<\/span> <span class=pl-k>from<\/span> <span class=pl-s>&quot;.\/types\/GetUser&quot;<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"><\/td>\n          <td id=\"file-1801126254_1-js-LC4\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"><\/td>\n          <td id=\"file-1801126254_1-js-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>export<\/span> <span class=pl-k>const<\/span> <span class=pl-c1>GET_JOB_ROLE_GROUP_SHOW_QUERY<\/span> <span class=pl-c1>=<\/span> <span class=pl-en>gql<\/span><span class=pl-s>`<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"><\/td>\n          <td id=\"file-1801126254_1-js-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>  query GetUser($id: ID!) {<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"><\/td>\n          <td id=\"file-1801126254_1-js-LC7\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>    user(id: $id) {<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"><\/td>\n          <td id=\"file-1801126254_1-js-LC8\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>      id<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"><\/td>\n          <td id=\"file-1801126254_1-js-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>      first_name<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"><\/td>\n          <td id=\"file-1801126254_1-js-LC10\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>      last_name<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"><\/td>\n          <td id=\"file-1801126254_1-js-LC11\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>    }<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"><\/td>\n          <td id=\"file-1801126254_1-js-LC12\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>  }<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"><\/td>\n          <td id=\"file-1801126254_1-js-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s>`<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"><\/td>\n          <td id=\"file-1801126254_1-js-LC14\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"><\/td>\n          <td id=\"file-1801126254_1-js-LC15\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>export<\/span> <span class=pl-k>const<\/span> <span class=pl-en>useGetUserQuery<\/span> <span class=pl-c1>=<\/span> <span class=pl-kos>(<\/span><span class=pl-kos>)<\/span> <span class=pl-c1>=&gt;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"><\/td>\n          <td id=\"file-1801126254_1-js-LC16\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>useQuery<\/span><span class=pl-c1>&lt;<\/span><span class=pl-v>GetUser<\/span><span class=pl-kos>,<\/span> <span class=pl-v>GetUserVariables<\/span><span class=pl-c1>&gt;<\/span><span class=pl-kos>(<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"><\/td>\n          <td id=\"file-1801126254_1-js-LC17\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c1>GET_JOB_ROLE_GROUP_SHOW_QUERY<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"><\/td>\n          <td id=\"file-1801126254_1-js-LC18\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"><\/td>\n          <td id=\"file-1801126254_1-js-LC19\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-c1>variables<\/span>: <span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"><\/td>\n          <td id=\"file-1801126254_1-js-LC20\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c1>id<\/span>: <span class=pl-s1>getResourceId<\/span><span class=pl-kos>(<\/span><span class=pl-kos>)<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"><\/td>\n          <td id=\"file-1801126254_1-js-LC21\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-kos>}<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"><\/td>\n          <td id=\"file-1801126254_1-js-LC22\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>}<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_1-js-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"><\/td>\n          <td id=\"file-1801126254_1-js-LC23\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>)<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n  <\/table>\n<\/div>\n\n\n  <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https:\/\/gist.github.com\/handshake-engineering-blog\/3990a8856318aa4ac8bf6634a271464a\/raw\/025281f139e3d239194171eedb8ff6bc2626feef\/1801126254_1.js\" style=\"float:right\">view raw<\/a>\n        <a href=\"https:\/\/gist.github.com\/handshake-engineering-blog\/3990a8856318aa4ac8bf6634a271464a#file-1801126254_1-js\">\n          1801126254_1.js\n        <\/a>\n        hosted with &#10084; by <a href=\"https:\/\/github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n<\/div>\n\n<\/div><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<h2>TypeScript Interface Generation<\/h2>\n\n\n\n<p>Since many components don\u2019t have their own colocated fragment it can be hard to remember what data is available. This can be especially challenging in GraphQL since each query is specifying the exact data it needs and the shape of each response could be different. Having TypeScript interfaces for our queries is very helpful for this since it lets us easily explore the data we have access to in the response.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-style-default\"><img loading=\"lazy\" width=\"1024\" height=\"486\" src=\"https:\/\/i2.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.png?resize=1024%2C486&#038;ssl=1\" alt=\"Screenshot showing how TypeScript interfaces help us to have a better explorability on our data structure\" class=\"wp-image-9532\" srcset=\"https:\/\/i2.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.png?resize=1024%2C486&amp;ssl=1 1024w, https:\/\/i2.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.png?resize=300%2C143&amp;ssl=1 300w, https:\/\/i2.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.png?resize=768%2C365&amp;ssl=1 768w, https:\/\/i2.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.png?w=1204&amp;ssl=1 1204w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\" \/><figcaption>TypeScript interfaces are useful for our queries as it lets us easily explore the data we have access to in the response.<\/figcaption><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>Maintaining these interfaces by hand can be very tedious. Luckily, the Apollo team has built<a href=\"https:\/\/github.com\/apollographql\/apollo-tooling\"> apollo-tools<\/a>, which provides<a href=\"https:\/\/github.com\/apollographql\/apollo-tooling#code-generation\"> code generation for TypeScript interfaces<\/a> based on gql templates. We can set up apollo-tools to watch for file changes on our gql templates and automatically regenerate TS interfaces, which provides a nice feedback loop during development.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"672\" src=\"https:\/\/i0.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.gif?resize=1024%2C672&#038;ssl=1\" alt=\"Gif with the changes on our gql templates and how the TypeScript interfaces regenerate\" class=\"wp-image-9534\" srcset=\"https:\/\/i0.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.gif?resize=1024%2C672&amp;ssl=1 1024w, https:\/\/i0.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.gif?resize=300%2C197&amp;ssl=1 300w, https:\/\/i0.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/GraphQL.gif?resize=768%2C504&amp;ssl=1 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\" \/><figcaption>Apollo-tools allow us to watch for file changes on our gql templates and regenerate the TypeScript interfaces<\/figcaption><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>There are some compelling alternatives to apollo-tools that are also worth checking out. Our team is currently investigating<a href=\"https:\/\/www.graphql-code-generator.com\/\"> GraphQL Code Generator<\/a>, which can generate more than just types based on queries. Stay tuned to our blog for more on this!<\/p>\n\n\n\n<h2>Testing with a Mock API<\/h2>\n\n\n\n<p>Now that we have much more accurate interfaces for the responses of our requests, we need to make sure our mocks in our tests match the interfaces. We can&#8217;t reuse generic factories like we did for requests to our REST API because those include a lot of attributes we aren\u2019t using.<\/p>\n\n\n\n<p>Because we have all the type definitions for our schema, we can actually automate generating mocks for each query. Following the example in<a href=\"https:\/\/www.freecodecamp.org\/news\/a-new-approach-to-mocking-graphql-data-1ef49de3d491\/\"> this article<\/a> we built our own MockedProvider which provides a mock API rather than mocking individual requests in each test. Here is what this looks like in an example spec:<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler\"><div class=\"wp-block-embed__wrapper\">\n<style>.gist table { margin-bottom: 0; }<\/style><div style=\"tab-size: 8\" id=\"gist109922281\" class=\"gist\">\n    <div class=\"gist-file\" translate=\"no\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-1801126254_2-js\" class=\"file my-2\">\n    \n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-javascript  \">\n\n      \n<div >\n  \n  <table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n        <tr>\n          <td id=\"file-1801126254_2-js-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"><\/td>\n          <td id=\"file-1801126254_2-js-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-en>describe<\/span><span class=pl-kos>(<\/span><span class=pl-s>&quot;&lt;EmployerCard \/&gt;&quot;<\/span><span class=pl-kos>,<\/span> <span class=pl-kos>(<\/span><span class=pl-kos>)<\/span> <span class=pl-c1>=&gt;<\/span> <span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"><\/td>\n          <td id=\"file-1801126254_2-js-LC2\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>const<\/span> <span class=pl-s1>customResolvers<\/span> <span class=pl-c1>=<\/span> <span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"><\/td>\n          <td id=\"file-1801126254_2-js-LC3\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-en>Query<\/span>: <span class=pl-kos>(<\/span><span class=pl-kos>)<\/span> <span class=pl-c1>=&gt;<\/span> <span class=pl-kos>(<\/span><span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"><\/td>\n          <td id=\"file-1801126254_2-js-LC4\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-en>employers<\/span>: <span class=pl-kos>(<\/span><span class=pl-kos>)<\/span> <span class=pl-c1>=&gt;<\/span> <span class=pl-kos>(<\/span><span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"><\/td>\n          <td id=\"file-1801126254_2-js-LC5\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c1>id<\/span>: <span class=pl-c1>1<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"><\/td>\n          <td id=\"file-1801126254_2-js-LC6\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c1>name<\/span>: <span class=pl-s>&quot;Handshake&quot;<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"><\/td>\n          <td id=\"file-1801126254_2-js-LC7\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-kos>}<\/span><span class=pl-kos>)<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"><\/td>\n          <td id=\"file-1801126254_2-js-LC8\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>}<\/span><span class=pl-kos>)<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"><\/td>\n          <td id=\"file-1801126254_2-js-LC9\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>}<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"><\/td>\n          <td id=\"file-1801126254_2-js-LC10\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"><\/td>\n          <td id=\"file-1801126254_2-js-LC11\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>const<\/span> <span class=pl-en>mountComponent<\/span> <span class=pl-c1>=<\/span> <span class=pl-kos>(<\/span><span class=pl-kos>)<\/span> <span class=pl-c1>=&gt;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"><\/td>\n          <td id=\"file-1801126254_2-js-LC12\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-en>render<\/span><span class=pl-kos>(<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"><\/td>\n          <td id=\"file-1801126254_2-js-LC13\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-c1>&lt;<\/span><span class=pl-ent>ApolloMockedProvider<\/span> <span class=pl-c1>customResolvers<\/span><span class=pl-c1>=<\/span><span class=pl-kos>{<\/span><span class=pl-s1>customResolvers<\/span><span class=pl-kos>}<\/span><span class=pl-c1>&gt;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"><\/td>\n          <td id=\"file-1801126254_2-js-LC14\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c1>&lt;<\/span><span class=pl-ent>EmployerCard<\/span> <span class=pl-c1>id<\/span><span class=pl-c1>=<\/span><span class=pl-kos>{<\/span><span class=pl-c1>1<\/span><span class=pl-kos>}<\/span> <span class=pl-c1>\/<\/span><span class=pl-c1>&gt;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"><\/td>\n          <td id=\"file-1801126254_2-js-LC15\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-c1>&lt;<\/span><span class=pl-c1>\/<\/span><span class=pl-ent>ApolloMockedProvider<\/span><span class=pl-c1>&gt;<\/span><span class=pl-kos>,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"><\/td>\n          <td id=\"file-1801126254_2-js-LC16\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>)<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"><\/td>\n          <td id=\"file-1801126254_2-js-LC17\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"><\/td>\n          <td id=\"file-1801126254_2-js-LC18\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-en>it<\/span><span class=pl-kos>(<\/span><span class=pl-s>&quot;renders the employer&#39;s name&quot;<\/span><span class=pl-kos>,<\/span> <span class=pl-k>async<\/span> <span class=pl-kos>(<\/span><span class=pl-kos>)<\/span> <span class=pl-c1>=&gt;<\/span> <span class=pl-kos>{<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"><\/td>\n          <td id=\"file-1801126254_2-js-LC19\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>const<\/span> <span class=pl-kos>{<\/span> getByText <span class=pl-kos>}<\/span> <span class=pl-c1>=<\/span> <span class=pl-en>mountComponent<\/span><span class=pl-kos>(<\/span><span class=pl-kos>)<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"><\/td>\n          <td id=\"file-1801126254_2-js-LC20\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"><\/td>\n          <td id=\"file-1801126254_2-js-LC21\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-en>expect<\/span><span class=pl-kos>(<\/span><span class=pl-en>getByText<\/span><span class=pl-kos>(<\/span><span class=pl-s>&quot;Handshake&quot;<\/span><span class=pl-kos>)<\/span><span class=pl-kos>)<\/span><span class=pl-kos>.<\/span><span class=pl-en>toBeInTheDocument<\/span><span class=pl-kos>(<\/span><span class=pl-kos>)<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"><\/td>\n          <td id=\"file-1801126254_2-js-LC22\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>}<\/span><span class=pl-kos>)<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-1801126254_2-js-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"><\/td>\n          <td id=\"file-1801126254_2-js-LC23\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-kos>}<\/span><span class=pl-kos>)<\/span><span class=pl-kos>;<\/span><\/td>\n        <\/tr>\n  <\/table>\n<\/div>\n\n\n  <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https:\/\/gist.github.com\/handshake-engineering-blog\/1c19a2ac8f2c5b3f4c50981024ebdcff\/raw\/098e6670ecf3e01bc343951ddb2c003e7fec0314\/1801126254_2.js\" style=\"float:right\">view raw<\/a>\n        <a href=\"https:\/\/gist.github.com\/handshake-engineering-blog\/1c19a2ac8f2c5b3f4c50981024ebdcff#file-1801126254_2-js\">\n          1801126254_2.js\n        <\/a>\n        hosted with &#10084; by <a href=\"https:\/\/github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n<\/div>\n\n<\/div><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>Note that we still have the ability to override specific attributes of the query so we can make assertions against data we declare in the setup for our tests. We ensure the employer returned from the mock API has the name \u201cHandshake\u201d which allows us to make an assertion on it later on.<\/p>\n\n\n\n<p>If we were to use Apollo\u2019s<a href=\"https:\/\/www.apollographql.com\/docs\/react\/development-testing\/testing\/#the-mockedprovider-component\"> MockedProvider<\/a> we would need to specify all fields in our query under results.data for our TypeScript interfaces to be accurate. It would be a lot of work to maintain these responses by hand and we didn\u2019t want to bypass our interfaces in tests. Using the mock API gets us around this and saves a lot of effort maintaining mocks by hand. There are certainly tradeoffs to using the mock API, but we believe the benefits outweigh the costs for us.<\/p>\n\n\n\n<h2>Conclusion<\/h2>\n\n\n\n<p>Defining fragments alongside our components and using our query hooks wherever we need access to the data in our components saves us from prop drilling and provides a DX we are happy with. We\u2019re also able to get more accurate TypeScript interfaces for responses than we had with our REST API and we don\u2019t need to spend any time maintaining them thanks to apollo-tools\u2019s codegen. Finally, we no longer need to implement mocks for every API request in our tests thanks to our mock API.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p>Photo by&nbsp;<a href=\"https:\/\/unsplash.com\/@surface?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Surface<\/a>&nbsp;on&nbsp;<a href=\"https:\/\/unsplash.com\/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash<\/a><\/p>\n\n\n\n<figure class=\"wp-block-image\"><img alt=\"\"\/><\/figure>\n","protected":false},"excerpt":{"rendered":"<p>Chris Schmitz, Senior Software Engineer shares how to work with GraphQL and Apollo to improve your DevX team&#8217;s efficiency and effectiveness.<\/p>\n","protected":false},"author":167034990,"featured_media":9538,"menu_order":0,"template":"","our_team_category":[1615,1443],"our_team_tag":[1693,1539,1692,1648],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v16.8 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Upleveling Our Developer Experience with GraphQL and Apollo Client | Handshake<\/title>\n<meta name=\"description\" content=\"Handshake is rolling out features powered by a new GraphQL API including new tooling, patterns, and best practices to improve dev experience.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Upleveling Our Developer Experience with GraphQL and Apollo Client | Handshake\" \/>\n<meta property=\"og:description\" content=\"Handshake is rolling out features powered by a new GraphQL API including new tooling, patterns, and best practices to improve dev experience.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/\" \/>\n<meta property=\"og:site_name\" content=\"Handshake\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/joinhandshake\" \/>\n<meta property=\"article:modified_time\" content=\"2021-10-12T18:11:52+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/graphql.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"640\" \/>\n\t<meta property=\"og:image:height\" content=\"427\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:site\" content=\"@joinhandshake\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/joinhandshake.com\/#organization\",\"name\":\"Handshake\",\"url\":\"https:\/\/joinhandshake.com\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/joinhandshake\",\"https:\/\/www.instagram.com\/joinhandshake\",\"https:\/\/www.linkedin.com\/company\/team-handshake\/\",\"https:\/\/twitter.com\/joinhandshake\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/joinhandshake.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2019\/11\/handshake-share.png?fit=1200%2C628&ssl=1\",\"contentUrl\":\"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2019\/11\/handshake-share.png?fit=1200%2C628&ssl=1\",\"width\":1200,\"height\":628,\"caption\":\"Handshake\"},\"image\":{\"@id\":\"https:\/\/joinhandshake.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/joinhandshake.com\/#website\",\"url\":\"https:\/\/joinhandshake.com\/\",\"name\":\"Handshake\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/joinhandshake.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/joinhandshake.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/graphql.jpg?fit=640%2C427&ssl=1\",\"contentUrl\":\"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/graphql.jpg?fit=640%2C427&ssl=1\",\"width\":640,\"height\":427,\"caption\":\"woman software engineer typing on computer\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#webpage\",\"url\":\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/\",\"name\":\"Upleveling Our Developer Experience with GraphQL and Apollo Client | Handshake\",\"isPartOf\":{\"@id\":\"https:\/\/joinhandshake.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#primaryimage\"},\"datePublished\":\"2021-06-11T23:37:47+00:00\",\"dateModified\":\"2021-10-12T18:11:52+00:00\",\"description\":\"Handshake is rolling out features powered by a new GraphQL API including new tooling, patterns, and best practices to improve dev experience.\",\"breadcrumb\":{\"@id\":\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/joinhandshake.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Upleveling Our Developer Experience with GraphQL and Apollo Client\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Upleveling Our Developer Experience with GraphQL and Apollo Client | Handshake","description":"Handshake is rolling out features powered by a new GraphQL API including new tooling, patterns, and best practices to improve dev experience.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/","og_locale":"en_US","og_type":"article","og_title":"Upleveling Our Developer Experience with GraphQL and Apollo Client | Handshake","og_description":"Handshake is rolling out features powered by a new GraphQL API including new tooling, patterns, and best practices to improve dev experience.","og_url":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/","og_site_name":"Handshake","article_publisher":"https:\/\/www.facebook.com\/joinhandshake","article_modified_time":"2021-10-12T18:11:52+00:00","og_image":[{"width":640,"height":427,"url":"https:\/\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/graphql.jpg","path":"\/srv\/htdocs\/wp-content\/uploads\/2021\/06\/graphql.jpg","size":"full","id":9538,"alt":"woman software engineer typing on computer","pixels":273280,"type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_site":"@joinhandshake","twitter_misc":{"Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/joinhandshake.com\/#organization","name":"Handshake","url":"https:\/\/joinhandshake.com\/","sameAs":["https:\/\/www.facebook.com\/joinhandshake","https:\/\/www.instagram.com\/joinhandshake","https:\/\/www.linkedin.com\/company\/team-handshake\/","https:\/\/twitter.com\/joinhandshake"],"logo":{"@type":"ImageObject","@id":"https:\/\/joinhandshake.com\/#logo","inLanguage":"en-US","url":"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2019\/11\/handshake-share.png?fit=1200%2C628&ssl=1","contentUrl":"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2019\/11\/handshake-share.png?fit=1200%2C628&ssl=1","width":1200,"height":628,"caption":"Handshake"},"image":{"@id":"https:\/\/joinhandshake.com\/#logo"}},{"@type":"WebSite","@id":"https:\/\/joinhandshake.com\/#website","url":"https:\/\/joinhandshake.com\/","name":"Handshake","description":"","publisher":{"@id":"https:\/\/joinhandshake.com\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/joinhandshake.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#primaryimage","inLanguage":"en-US","url":"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/graphql.jpg?fit=640%2C427&ssl=1","contentUrl":"https:\/\/i1.wp.com\/joinhandshake.com\/wp-content\/uploads\/2021\/06\/graphql.jpg?fit=640%2C427&ssl=1","width":640,"height":427,"caption":"woman software engineer typing on computer"},{"@type":"WebPage","@id":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#webpage","url":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/","name":"Upleveling Our Developer Experience with GraphQL and Apollo Client | Handshake","isPartOf":{"@id":"https:\/\/joinhandshake.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#primaryimage"},"datePublished":"2021-06-11T23:37:47+00:00","dateModified":"2021-10-12T18:11:52+00:00","description":"Handshake is rolling out features powered by a new GraphQL API including new tooling, patterns, and best practices to improve dev experience.","breadcrumb":{"@id":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/joinhandshake.com\/blog\/our-team\/improve-devx-with-graphql-apollo\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/joinhandshake.com\/"},{"@type":"ListItem","position":2,"name":"Upleveling Our Developer Experience with GraphQL and Apollo Client"}]}]}},"jetpack_sharing_enabled":true,"_links":{"self":[{"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/our-team\/9529"}],"collection":[{"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/our-team"}],"about":[{"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/types\/our-team"}],"author":[{"embeddable":true,"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/users\/167034990"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/media\/9538"}],"wp:attachment":[{"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/media?parent=9529"}],"wp:term":[{"taxonomy":"our_team_category","embeddable":true,"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/our_team_category?post=9529"},{"taxonomy":"our_team_tag","embeddable":true,"href":"https:\/\/joinhandshake.com\/wp-json\/wp\/v2\/our_team_tag?post=9529"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}